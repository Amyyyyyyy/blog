<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[我对于css布局与定位的理解]]></title>
    <url>%2Fblog%2F2018%2F02%2F28%2F%E6%88%91%E5%AF%B9%E4%BA%8Ecss%E5%B8%83%E5%B1%80%E4%B8%8E%E5%AE%9A%E4%BD%8D%E7%9A%84%E7%90%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[最近看了下之前的笔记，决定整理一下放在博客上面，如果有理解得不对的地方，还望指出！ 1 高度是由什么决定的内联元素内联元素的高度：跟字体有关系，但是可以设置高度和行高来规定内联元素的高度；例如一个span标签中的字体，设置字体为12px，实际上并没有12px；一般内联元素的高度，都跟字体有直接关系。 块级元素块级元素的高度：由其内部文档流元素的高度总和决定 - 什么是文档流？文档流的英文是: Normal Flow 我觉得英文的意思可能更准确一点，文档流就是文档内元素的流动方向； 内联元素：* 内联元素从左往右流动，如果宽度不够时，就会自动向下换行继续流动，但是当内联元素出现很长的英文单词时，此单词则不会换行分开。 * 如果希望换行可以在css中使用word-break:break-all 会把每个字都分开。 块级元素：* 每一个块都占一行，从上往下依次流动 * 其高度又块级元素内部的文档流元素的高度总和决定 2 line-box 此处引自 mooonx 想要清晰的明白（二）CSS 盒模型Block box与Line box 每一行称为一条Line Box，它又是由这一行的许多inline-box组成，它的高度可以直接由line-height决定，line boxes的高度垂直堆叠形成了containing box的高度，就是我们见到的div或是p标签之类的高度了。 匿名文本&lt;div&gt;当你只有一把锤子&lt;span&gt;一切看起来&lt;/span&gt;都像是颗钉子&lt;/div&gt; 未包含在行内元素的字符串（当你只有一把锤子，都像颗钉子）就叫匿名文本 内容区 行内框 间距内容区 css假设每个元素都会生成一个或者多个Box，称为元素框，元素框中心有内容区，内容区外周围包括了padding，border，margin，但是，替换元素是包括外边距，内边距，边框的。 行间距 行间距是font-size与line-height的差值，被分成两半在内容区的上下 行内框 非替换元素，行内框高度=line-height 替换元素，行内框高度=内容区宽度（行间距不应用到替换元素） 行高 两行文字基线的距离 行框 一行有很多行内框，行框是包含这一行行内框最高点和最低点的 基线 不同元素的基线位置不同，整个行框会有一个基线，行内元素的位置是基于两者基线对齐]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git常用命令]]></title>
    <url>%2Fblog%2F2018%2F02%2F26%2Fgit%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[1 配置github 进入 https://github.com/settings/keys 点击 New SSH key，你需要输入 Title 和 Key，但是你现在没有 key 打开 Git Bash 运行 ssh-keygen -t rsa -b 4096 -C “你的邮箱”，注意填写你的邮箱！ 按回车三次 运行 cat ~/.ssh/id_rsa.pub，得到一串东西，完整的复制这串东西 回到上面第 3 步的页面，在 Title 输入「我的第一个 key」 在 Key 里粘贴刚刚你你复制的那串东西 点击 Add SSH key 回到 Git Bash 运行 ssh -T git@github.com，你可能会看到这样的提示： 如果你看到hi！xxx 那么你就成功啦！ tips： 一台电脑只需要一个 SSH key 一个 SSH key 可以访问你的所有仓库，即使你有 1000000 个仓库，都没问题 2 配置gitgit config --global user.name 你的英文名 git config --global user.email 你的邮箱 git config --global push.default matching git config --global core.quotepath false git config --global core.editor &quot;vim&quot; 五句话，依次运行。 3 只在本地使用git-初始化 创建目录作为我们的项目目录：mkdir git-demo 进入目录 cd git-demo git init 这句命令会在git-demo里创建一个.git目录 在git-demo目录里面添加任意文件假设我们添加了两个文件，分别是 index.html 和 css/style.css touch index.html mkdir css touch css/style.css 运行 git status -sb 可以看到文件前面有 ?? 号 Initial commit on master ?? css/ ?? index.html这个 ?? 表示git不知道你要怎么对待这些变动。 使用 git add 将文件添加到「暂存区」 #####你可以一个一个地 add git add index.html git add css/style.css #####你也可以一次性 add git add . 意思是把当前目录（.表示当前目录）里面的变动都加到「暂存区」 再次运行 git status -sb，可以看到 ?? 变成了 A Initial commit on master A css/style.css A index.html #####A 的意思就是添加，也就是说你告诉 git，这些文件我要加到仓库里 使用 git commit -m “信息” 将你 add 过的内容「正式提交」到本地仓库（.git就是本地仓库），并添加一些注释信息，方便日后查阅#####你可以一个一个地 commit git commit index.html -m ‘添加index.html’ git commit css/style.css -m “添加 css/style.css” #####你也可以一次性 commit git commit . -m “添加了几个文件” 再再次运行 git status -sb，发现没有文件变动了，这是因为文件的变动已经记录在仓库里了。 这时你可以使用 git log 就可以看到历史上的变动： commit f0d95058cd32a332b98967f6c0a701c64a00810a Author: frankfang &#x66;&#x72;&#x61;&#110;&#107;&#x66;&#97;&#110;&#103;&#x31;&#57;&#57;&#48;&#x40;&#103;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d; Date: Thu Sep 28 22:30:43 2017 +0800 以上就是 git add / git commit -文件变动如果想继续改文件，应该怎么做呢？ start css/style.css 会使用默认的编辑器打开 css/style.css然后修改 css/style.css 文件 运行 git status -sb 发现提示中有一个 M master M css/style.css #####这个 M 的意思就是 Modified，表示这个文件被修改了 此时你如果想让改动保存到仓库里，你需要先 git add css/style.css 或者也可以 git add . 注意，由于这个 css/style.css 以前被我们 add 过，你往文章上面看，我们是 add 过 css/style.css 的，所以此处的 git add 操作可以省略。 再次运行 git status -sb 发现 M 有红色变成了绿色 运行 git commit -m “更新 css/style.css”，这个改动就被提交到 .git 本地仓库了。 再再次运行 git status -sb，会发现没有变更了，这说明所有变动都被本地仓库记录在案了。tips:git status -sb 是什么意思： git status 是用来显示当前的文件状态的，哪个文件变动了，方便你进行 git add 操作。 -sb 选项的意思就是，-s 的意思是显示总结（summary），-b 的意思是显示分支（branch），所以 -sb 的意思是显示总结和分支。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于html一些标签，我的理解]]></title>
    <url>%2Fblog%2F2018%2F02%2F26%2F%E5%85%B3%E4%BA%8Ehtml%E4%B8%80%E4%BA%9B%E6%A0%87%E7%AD%BE%EF%BC%8C%E6%88%91%E7%9A%84%E7%90%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[写得可能有点杂乱无章 这里整理一下我遇到的一些常见标签 和我自己的理解 嘿嘿 1 iframe 标签嵌套页面&lt;iframe src=&quot;https://www.baidu.com&quot; name=&quot;xxx&quot;&gt;&lt;/iframe&gt; iframe 可以跟a标签结合着用，设置iframe的name属性，并且把a标签的target设置为iframe的name，这样就可以让a标签通过name指向iframe啦！ iframeborder 消除frame的边框 对于iframe到底好不好用的问题 我在知乎上找到一个我觉得不错的回答：HTML：The iframe element represents a nested browsing context. 所以如果你需要独立的浏览上下文，那么就用 iframe，否则就不用。历史上，iframe 常被用于复用部分界面，但是多数情况下并不合适。 现在，应该使用 iframe 的例子如： 沙箱隔离。 引用第三方内容。 独立的带有交互的内容，比如幻灯片。 需要保持独立焦点和历史管理的子窗口，如复杂的Web应用。注：登录弹窗用 iframe 未必合适。HTML标准新增了dialog元素，可能更适合。 作者：贺师俊链接：https://www.zhihu.com/question/20653055/answer/17786008来源：知乎著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 2 a 标签跳转页面（HTTP GET 请求） _blank 在空白页面打开 _self 在自身页面打开 _parent 在父级页面打开 _top 在最顶级页面打开 例如：&lt;a target=&quot;_top&quot; href=&quot;xxx&quot;&gt;在最顶层页面或者iframe中打开 &lt;a target=&quot;xxx&quot; href=&quot;xxx&quot;&gt; 在name为xxx的窗口或者iframe中打开 a 标签还可以这样写&lt;a href=&quot;?name=111&quot;&gt; 相当于在url请求后面ping了个name的参数。 意思是请求体重加了一个name=111的条件 a 标签还可以支持无协议链接&lt;a href=&quot;//qq.html&quot;&gt; 浏览器会根据当前协议，补全无协议链接的协议 but 如果用file://无协议链接 ，就会访问到file://qq.com 这是一个不存在的路径 javascript 伪协议&lt;a href=&quot;javascript:;&quot;&gt; 当遇到不希望点击a标签不跳转的时候可以使用； but 为什么要有JavaScript伪协议呢 可以在用户点击a标签时执行一段JavaScript代码 在地址栏输入JavaScript:alert(1)可以在当前页面执行一段代码 伪协议可以实现点击之后没有任何动作的a标签 3 form 标签&lt;form action=&quot;xxx&quot; method=&quot;POST&quot;&gt; form可以用method属性指定用POST还是GET请求 but 如果form表单没有提交按钮 就无法提交这个表单提交按钮可以由两种方式实现 &lt;input type=&quot;submit&quot;&gt; &lt;button&gt;submit&lt;/button&gt; 此处的input 的type必须是submit 而button不能指定type，因为button在form里面的默认type即是submit，如果指定了其它type，那么button将不再具有submit功能 input和button的区别在于是否为空标签； 4 input 标签与文字关联的checkbox① 使用label将复选框和文字组合起来 &lt;input type=checkbox id=xxx name=xxx&gt;&lt;label for=&quot;xxx&quot; value=&quot;ss&quot;&gt;xxxx&lt;/lable&gt; ② 用label包含整个标签 &lt;label&gt;xxx&lt;input type=checkbox name=xxx value=ss&gt;&lt;/label&gt; but 如果input不加name，在表单提交时，input的值就不会出现在请求里。radio&lt;input name=xx type=radio value=xx&gt; &lt;input name=xx type=radio value=yy&gt; 当设置相同name时 便可设置成单选框 5 select 标签&lt;select name=&quot;group&quot;&gt; &lt;option value=&quot;&quot;&gt;-&lt;/option&gt; &lt;option value=&quot;1&quot;&gt;第一组&lt;/option&gt; &lt;option value=&quot;2&quot; disabled&gt;第二组&lt;/option&gt; &lt;option value=&quot;3&quot; selected&gt;第三组&lt;/option&gt; 注意:按住control select是可以多选的6 table 标签html规定table的子元素只有：thead,tbody,tfoot,colgroup tips: 不管thead，tbody…怎么放顺序，浏览器都会给你纠正..&lt;colgroup&gt; &lt;col width= bgcolor&gt;/第1列 &lt;col width=&gt;第2列 &lt;/colgroup&gt; colgroup应该算是比较冷僻的元素了 它可以直接规定每列的样式，不用再给每个td一个classname然后设置style了； 嘿嘿 标签就整理到这里 如有疏漏还请指出！]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html标签</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于HTML]]></title>
    <url>%2Fblog%2F2018%2F02%2F25%2F%E5%85%B3%E4%BA%8EHTML%2F</url>
    <content type="text"><![CDATA[W3C 引自维基百科 1 万维网联盟（World Wide Web Consortium，W3C），又称W3C理事会，是万维网的主要国际标准组织&nbsp;&nbsp;万维网联盟（W3C）由蒂姆·伯纳斯-李于1994年10月离开欧洲核子研究中心（CERN）后成立，在欧盟执委会和国防高等研究计划署（DARPA）的支持下成立于麻省理工学院MIT计算机科学与人工智能实验室（MIT／LCS） &nbsp;&nbsp;为解决网络应用中不同平台、技术和开发者带来的不兼容问题，保障网络信息的顺利和完整流通，万维网联盟制定了一系列标准并督促网络应用开发者和内容提供者遵循这些标准。标准的内容包括使用语言的规范，开发中使用的导则和解释引擎的行为等等。W3C也制定了包括XML和CSS等的众多影响深远的标准规范。 MDN Web Docs 引自维基百科 2 MDN Web Docs（旧称Mozilla Developer Network、Mozilla Developer Center，简称MDN）是一个汇集众多Mozilla基金会产品和网络技术开发文档的免费网站。&nbsp;&nbsp;该项目始于2005年，最初由Mozilla公司员工Deb Richardson领导。自2006年以来，文档工作由Eric Shepherd领导。 &nbsp;&nbsp;网站最初的内容是由DevEdge提供，但在AOL收购Netscape后，DevEdge网站也宣布关闭。为此Mozilla基金会向AOL获取了DevEdge发布的内容[3][2]，同时将DevEdge内容搬移到mozilla.org。 HTML所有标签3 什么是空标签MDN 的解释是：An empty element is an element from HTML, SVG, or MathML that cannot have any child nodes；我的理解是空标签就是没有html内容的标签，只需要写一个开始标签。 4 什么是可替换标签可替换元素就是浏览器根据元素的标签和属性，来决定元素的具体显示内容。 例如浏览器会根据img标签的src属性的值来读取图片信息并显示出来，而如果查看(x)html代码，则看不到图片的实际内容；又例如根据input标签的type属性来决定是显示输入框，还是单选按钮等。 (x)html中的img、input、textarea、select、object都是替换元素。这些元素往往没有实际的内容，即是一个空元素 5 是否可以区分块级元素和内联元素我个人的理解是，html并没有块级元素和内联元素之分，有的只是他们自身的默认css样式区分，html不管这个标签的样式，只管这个标签的内容和意义。]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浅谈计算机是如何存储数据的]]></title>
    <url>%2Fblog%2F2018%2F02%2F23%2F%E6%B5%85%E8%B0%88%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%98%AF%E5%A6%82%E4%BD%95%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E7%9A%84%2F</url>
    <content type="text"><![CDATA[以前上计算机原理的课的时候，老师讲得总是不是很浅显易懂，为了防止自己成为井底之蛙，近期又去了解了下，做个笔记吧 计算机就是二进制的世界，只存在0与1 注：此处引自方方的文章 1 那么0和1又是怎么存储的呢 这是一个充电的过程 存储—&gt;1就充电，0就不充电 读取—&gt;电量大于 50% 就是 1，电量小于 50% 就是 0 2 如何存储字符？ ####将每个字符编号 ASCII 美国信息交换标准代码 如果你想储存 a，那么就储存 97 对应的二进制a -&gt; 01100 0012 -&gt; 6116 如果你想储存 1，那么就储存 49 对应的二进制1 -&gt; 0011 00012 -&gt; 3116 3 中文如何存储？GB 2312 中国国家标准简体中文字符集 GB2312 共收录 6763 个汉字，同时收录了包括拉丁字母、希腊字母、日文平假名及片假名字母、俄语西里尔字母在内的 682 个字符。 后来为了存储生僻字、繁体字、日语、朝鲜语等，微软推出了 GBK 字符集 4 如何存储所有字符####将全球字符编号 Unicode 字符集包括中日韩文字、藏文、盲文、楔形文字、 颜文字:-)、 绘文字😂 2016年6月时，Unicode 总共有 128237 个字符 5 如何将 Unicode 存到计算机里 ###以一种高性价比的方式 ####低性价比a -&gt; 00000000 00000000 00000000 011000012 = 006116 你 -&gt; 00000000 00000000 01001111 011000002 = 4F6016 #####高性价比 UTF-8a -&gt; 01100001 你-&gt; 11100100 10111101 10100000]]></content>
      <categories>
        <category>计算机原理</category>
      </categories>
      <tags>
        <tag>计算机原理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用hexo+gitpages搭建博客]]></title>
    <url>%2Fblog%2F2018%2F02%2F23%2F%E4%BD%BF%E7%94%A8hexo-gitpages%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[嘿嘿 最近学习了用hexo搭建博客 下面是本萌新的一些些经验~注：我用的是mac系统 以下是我安装的一些步骤：1.进入一个目录，我是放到documents的~以下以documents示例2.在github上新建一个空的仓库，仓库的名称可以是你的用户名等等等3.打开终端(在这里给大家推荐一个无敌好用终端替代品(iterm2)，具体自行谷歌和百度哦嘿嘿)4.安装hexo npm install -g hexo-cli5.hexo init myBlog(随便你想叫什么名字哈。。)6.cd myBlog7.npm i8.可以在myblog下新建博客啦 hexo new xxxx(xxxx=博客的名字)9.然后会出现一个md文档的路径10.然后就愉快的编辑这个md文件吧 vim xxx.md11.编辑网站设置 vim _config.yml 把第6行的title改成whatever你喜欢的名字 把第9行的author改成你的名字哦 最后一行的type改成 type：git(!!：后面是有空格的) 在最后一行后面新增一行，左边与type平齐。加上一行加上一行 repo: 仓库地址 （请将仓库地址改为「你的用户名.github.io」对应的仓库地址 !!: 这个冒号后面都有空格啊 （不要犯跟我一样的错误啦）12.npm install hexo-deployer-git –save，安装 git 部署插件13.hexo deploy14.进入「你的用户名.github.io」对应的 repo，打开 GitHub Pages 功能，如果已经打开了，就直接点击预览链接嘿嘿嘿 现在应该可以看到你的博客啦~ hexo主题设置对啦 hexo 还有很多主题 嘿嘿1 https://github.com/hexojs/hexo/wiki/Themes 上面有主题合集2 随便找一个主题，进入主题的 GitHub 首页 推荐大家 next3 复制它的 SSH 地址或 HTTPS 地址4 cd themes5 git clone git@github.com:iissnan/hexo-theme-next.git6 cd ..7 将 _config.yml 的第 75 行改为 theme: hexo-theme-next，保存8 hexo generate9 hexo deploy然后刷新博客 嘿嘿 尽情挑选吧]]></content>
      <tags>
        <tag>share</tag>
      </tags>
  </entry>
</search>
